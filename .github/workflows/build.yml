name: EAS Build & Deploy

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Build profile to use'
        required: true
        default: 'preview'
        type: choice
        options:
          - development
          - preview
          - production
      platform:
        description: 'Platform to build for'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ios
          - android
      submit:
        description: 'Submit to app stores after build'
        required: false
        default: false
        type: boolean
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: EAS Build
    runs-on: ubuntu-latest

    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèó Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üìã Create .env file
        run: |
          cat > .env << EOF
          EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_PROJECT_ID=${{ secrets.EXPO_PUBLIC_PROJECT_ID }}
          EXPO_PUBLIC_REVENUECAT_IOS_API_KEY=${{ secrets.EXPO_PUBLIC_REVENUECAT_IOS_API_KEY }}
          EXPO_PUBLIC_REVENUECAT_ANDROID_API_KEY=${{ secrets.EXPO_PUBLIC_REVENUECAT_ANDROID_API_KEY }}
          EOF

      - name: üî® Development Build
        if: github.event.inputs.profile == 'development' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/') == false)
        run: eas build --platform ${{ github.event.inputs.platform || 'all' }} --profile development --non-interactive

      - name: üì± Preview Build
        if: github.event.inputs.profile == 'preview' || github.event_name == 'workflow_dispatch'
        run: eas build --platform ${{ github.event.inputs.platform || 'all' }} --profile preview --non-interactive

      - name: üöÄ Production Build
        if: github.event.inputs.profile == 'production' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        run: eas build --platform ${{ github.event.inputs.platform || 'all' }} --profile production --non-interactive

  submit:
    name: Submit to App Stores
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.submit == 'true' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))

    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèó Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üìã Setup App Store credentials
        run: |
          # Create Apple App Store Connect API key file
          if [ ! -z "${{ secrets.APP_STORE_CONNECT_API_KEY }}" ]; then
            mkdir -p ~/.appstoreconnect/private_keys/
            echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8
          fi

          # Create Google Play service account key file
          if [ ! -z "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}" ]; then
            echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}" > ./google-play-service-account.json
          fi

      - name: üçé Submit to App Store
        if: github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        run: eas submit --platform ios --profile production --non-interactive
        env:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}

      - name: ü§ñ Submit to Google Play
        if: github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        run: eas submit --platform android --profile production --non-interactive

  notify:
    name: Notify Build Status
    needs: [build, submit]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: üì± Notify Success
        if: needs.build.result == 'success' && (needs.submit.result == 'success' || needs.submit.result == 'skipped')
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "Profile: ${{ github.event.inputs.profile || 'auto' }}"
          echo "Platform: ${{ github.event.inputs.platform || 'all' }}"

      - name: ‚ùå Notify Failure
        if: needs.build.result == 'failure' || needs.submit.result == 'failure'
        run: |
          echo "‚ùå Build or submission failed!"
          echo "Build: ${{ needs.build.result }}"
          echo "Submit: ${{ needs.submit.result }}"
          exit 1