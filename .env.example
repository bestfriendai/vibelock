# Rename this file to `.env` and fill in values for development.
# Expo automatically exposes EXPO_PUBLIC_* at build time.

# Toggle local emulators in development. For production builds set this to false or remove it.
EXPO_PUBLIC_USE_FIREBASE_EMULATORS=false

# Firebase web config (legacy support; safe to leave empty if fully on Supabase)
EXPO_PUBLIC_FIREBASE_API_KEY=
EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=
EXPO_PUBLIC_FIREBASE_PROJECT_ID=locker-room-talk-app
EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=
EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=
EXPO_PUBLIC_FIREBASE_APP_ID=

# Supabase configuration (required)
EXPO_PUBLIC_SUPABASE_URL=
EXPO_PUBLIC_SUPABASE_ANON_KEY=

# Expo project ID (required for push notifications)
EXPO_PUBLIC_PROJECT_ID=

# SECURITY NOTICE: AI API keys are now managed securely via Supabase Edge Functions
# These keys should NOT be exposed in the client bundle via EXPO_PUBLIC_ variables
# Set these in your Supabase project secrets instead:
# supabase secrets set OPENAI_API_KEY=your_key_here
# supabase secrets set ANTHROPIC_API_KEY=your_key_here
# supabase secrets set GROK_API_KEY=your_key_here

# Optional: Other integrations (leave blank if unused)
EXPO_PUBLIC_VIBECODE_GOOGLE_API_KEY=
EXPO_PUBLIC_VIBECODE_ELEVENLABS_API_KEY=
EXPO_PUBLIC_VIBECODE_PROJECT_ID=

# RevenueCat API keys (for production monetization)
# DO NOT commit these keys to version control - use secure environment variable management
# These should be set in your hosting environment (EAS Secrets, Vercel, etc.)
EXPO_PUBLIC_REVENUECAT_IOS_API_KEY=
EXPO_PUBLIC_REVENUECAT_ANDROID_API_KEY=

# RevenueCat management API key (for server-side operations)
# This is different from the client-side keys above
REVENUECAT_API_KEY=

# RevenueCat premium entitlements (comma-separated list)
# Default: premium,pro
EXPO_PUBLIC_REVENUECAT_PREMIUM_ENTITLEMENTS=premium,pro

# ===== ERROR REPORTING CONFIGURATION =====
# Sentry configuration for error reporting and performance monitoring
# Get your DSN from https://sentry.io/settings/[organization]/projects/[project]/keys/
EXPO_PUBLIC_SENTRY_DSN=

# Sentry organization and project (for automated uploads)
# These are used by the Sentry plugin in app.config.js
SENTRY_ORG=
SENTRY_PROJECT=

# Sentry authentication token for automated source map uploads
# Create at: https://sentry.io/settings/account/api/auth-tokens/
# Required scopes: project:releases, org:read
# Upload as EAS secret: eas secret:create --scope project --name SENTRY_AUTH_TOKEN --value your_token_here
SENTRY_AUTH_TOKEN=

# ===== EAS SECRETS CONFIGURATION =====
# The following secrets should be uploaded to EAS for secure production builds
# DO NOT commit these files to version control

# Google Services Configuration (Android)
# Upload your google-services.json file as an EAS secret:
# eas secret:create --scope project --name GOOGLE_SERVICES_JSON --type file --value ./google-services.json
# This replaces the hardcoded googleServicesFile path in app.config.js
GOOGLE_SERVICES_JSON=

# Google Play Service Account Key (Android App Store Deployment)
# Upload your service account key JSON file as an EAS secret:
# eas secret:create --scope project --name GOOGLE_SERVICE_ACCOUNT_KEY --type file --value ./path/to/your-service-account-key.json
# This is used in eas.json for automated Play Store submissions

# ===== LOCAL DEVELOPMENT NOTES =====
# For local development, keep your google-services.json file in the project root
# The app.config.js will automatically fall back to the local file when GOOGLE_SERVICES_JSON is not set
# For production builds, EAS will inject the secure version from secrets

# ===== PRODUCTION MONITORING CONFIGURATION =====
# Performance monitoring and analytics
# Enable performance monitoring in production builds
EXPO_PUBLIC_ENABLE_PERFORMANCE_MONITORING=true

# Error reporting sample rates (0.0 to 1.0)
# Lower values in production to reduce overhead
EXPO_PUBLIC_ERROR_SAMPLE_RATE=0.1
EXPO_PUBLIC_PERFORMANCE_SAMPLE_RATE=0.05

# Production health check endpoints
EXPO_PUBLIC_HEALTH_CHECK_ENDPOINT=
EXPO_PUBLIC_STATUS_PAGE_URL=

# ===== SECURITY BEST PRACTICES =====
# 1. Never commit google-services.json or service account keys to version control
# 2. Use EAS secrets for all sensitive configuration files
# 3. Regularly rotate service account keys and update EAS secrets
# 4. Use different service accounts for development and production environments
# 5. Never commit Sentry auth tokens - always use EAS secrets
# 6. Use different Sentry projects for development, staging, and production
# 7. Enable Sentry data scrubbing for sensitive information in production
