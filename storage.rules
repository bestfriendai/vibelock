rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Enhanced security functions
    function isValidImage() {
      return request.resource.size < 10 * 1024 * 1024 && // 10MB max
             request.resource.contentType.matches('image/.*') &&
             request.resource.contentType in ['image/jpeg', 'image/png', 'image/webp'];
    }
    
    function isValidVideo() {
      return request.resource.size < 50 * 1024 * 1024 && // 50MB max
             request.resource.contentType.matches('video/.*') &&
             request.resource.contentType in ['video/mp4', 'video/quicktime'];
    }
    
    function isValidAudio() {
      return request.resource.size < 10 * 1024 * 1024 && // 10MB max
             request.resource.contentType.matches('audio/.*') &&
             request.resource.contentType in ['audio/mp4', 'audio/mpeg', 'audio/wav'];
    }
    
    function isValidPath(path) {
      return path.matches('^[a-zA-Z0-9-_\\./]+$') && // Only alphanumeric, hyphens, underscores, dots, and slashes
             !path.contains('..') && // No directory traversal
             path.size() <= 255; // Reasonable path length
    }

    // Reviews media - authenticated users can upload with validation, everyone can read
    match /reviews/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
                    isValidPath(request.resource.name) &&
                    (isValidImage() || isValidVideo() || isValidAudio());
    }
    
    // User profile images - users can manage their own images with validation
    match /users/{userId}/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
                    request.auth.uid == userId &&
                    isValidPath(request.resource.name) &&
                    isValidImage() &&
                    request.resource.name.matches('^avatar-.*\\.(jpg|jpeg|png|webp)$');
    }
    
    // Chat media - authenticated users can upload with validation, everyone can read
    match /chat/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
                    isValidPath(request.resource.name) &&
                    (isValidImage() || isValidVideo() || isValidAudio());
    }
    
    // Test files for functionality testing - restricted to specific users
    match /test/{allPaths=**} {
      allow read, write: if request.auth != null && 
                          request.auth.token.email.matches('.*@(test|dev|admin)\\.com$'); // Only test/admin emails
    }
    
    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}